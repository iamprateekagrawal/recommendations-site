{"version":3,"sources":["Components/PostReco.jsx","Components/Reco.jsx","App.js","reportWebVitals.js","index.js"],"names":["PostReco","props","theme","useContext","ThemeContext","useState","insData","setInsData","spin","setSpin","date","Date","call","stop","exchange","instrument","tradePrice","stopLoss","qty","targetPrice","getFullYear","getMonth","getDate","submitted","data","setData","onChange","event","target","name","value","checkSubmission","key","allFilled","alert","parseFloat","useEffect","instruments","className","location","message","style","id","type","htmlFor","disabled","selected","onClick","map","tradingsymbol","step","onKeyPress","charCode","min","format","minDate","preventDefault","setTimeout","callBack","console","log","history","push","Reco","fullData","showDate","month","year","mmm","dd","yyyy","toString","concat","res","themes","color","background","React","createContext","App","setTheme","setFullData","childData","Provider","path","process","render","length","to","pathname","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f16d9ca.chunk.js","sourcesContent":["import React, { useContext, useState, useEffect } from 'react'\r\nimport DatePicker from 'react-date-picker';\r\nimport { ThemeContext } from '../App';\r\n// import axios from 'axios';\r\nimport instruments from '../instruments.json';\r\n\r\nfunction PostReco(props) {\r\n\r\n  const theme = useContext(ThemeContext);\r\n  const [insData,setInsData]=useState([]);\r\n  const [spin, setSpin] = useState('no-spin');\r\n\r\n  var date = new Date();\r\n  const [data, setData] = useState({\r\n    call: '',\r\n    stop: '',\r\n    exchange: '',\r\n    instrument: '',\r\n    tradePrice: '',\r\n    stopLoss: '',\r\n    qty: '',\r\n    targetPrice: '',\r\n    date: new Date(date.getFullYear(), date.getMonth(), date.getDate()+10),\r\n    submitted: false\r\n  });\r\n\r\nfunction onChange(event) {\r\n  setData({...data,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  \r\n}\r\n\r\nfunction insVal() {\r\n    if(data.exchange===''){\r\n      return \"Please select an exchange first\"\r\n    }\r\n    else{\r\n      data.instrument = \"GOLDSTAR-SM\";\r\n      return \"GOLDSTAR-SM\"\r\n    }\r\n}\r\n\r\nuseEffect(() => {\r\n  setInsData(instruments.data);\r\n}, []);\r\n\r\nconst showIns = () => {\r\n  setInsData(instruments.data);\r\n}\r\n\r\nfunction allFilled () {\r\n  for (var key in data) {\r\n    if (data[key] === '')\r\n        return false;\r\n}\r\nreturn true;\r\n}\r\n\r\nfunction checkSubmission () {\r\n  if(!allFilled()){\r\n    return true;\r\n  }\r\n  if(data.qty!=='' && data.qty<=0){\r\n    alert(\"Quantity should be a positive integer\");\r\n    data.qty = '';\r\n    return true;\r\n  }\r\n  if(data.call === 'Buy' && parseFloat(data.stopLoss) >= parseFloat(data.tradePrice)){\r\n      alert(\"For Buy call - stop loss cannot be greater than or same as trade price\");\r\n      data.stopLoss = data.tradePrice = '';\r\n      return true;\r\n  }\r\n  if(data.call === 'Buy' && parseFloat(data.targetPrice) <= parseFloat(data.tradePrice)){\r\n      alert(\"For Buy call - target price cannot be less than or same as trade price\");\r\n      data.targetPrice = data.tradePrice = '';\r\n      return true;\r\n  }\r\n  if(data.call === 'Sell' && parseFloat(data.stopLoss) <= parseFloat(data.tradePrice)){\r\n      alert(\"For Sell call - stop loss cannot be less than or same as trade price\");\r\n      data.stopLoss = data.tradePrice = '';\r\n      return true;\r\n  }\r\n  if(data.call === 'Sell' && parseFloat(data.targetPrice) >= parseFloat(data.tradePrice)){\r\n      alert(\"For Sell call - target price cannot be greater than or same as trade price\");\r\n      data.targetPrice = data.tradePrice = '';\r\n      return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction sendData (event) {\r\n    if(!checkSubmission()) {\r\n        setSpin('spin');\r\n        event.preventDefault();\r\n        setTimeout(function() {\r\n          data.submitted = true;\r\n          props.callBack(data);\r\n          console.log('sent', data);\r\n          setSpin('no-spin');\r\n          props.history.push(`/reco`);\r\n        }, 0);  \r\n    }\r\n}\r\n\r\nfunction showMessage() {\r\n  if(props.location.message === \"show\"){\r\n    return \"No Recommendations found,create one!\"\r\n  }else{\r\n    return <div></div>\r\n  }\r\n}\r\n\r\n  return (\r\n    <>\r\n    <div>\r\n    <div className=\"message\">\r\n      <div className='show-message'>{showMessage()}</div>\r\n    </div>\r\n      <div className=\"outer-box\"  style={theme}>\r\n        <div>\r\n          Fill in the following details to send recommendations to your subscribers.\r\n        </div>\r\n        <form>\r\n        <div className=\"middle-box\">\r\n        <div className=\"inner-box\"  style={theme}>\r\n          <div className=\"left-container\">\r\n          <div className=\"set\">\r\n            <div className='form-txt'>Is it buy call or sell call?</div>\r\n            <div className='btn-pair'>\r\n              <input id=\"buy-btn\" name=\"call\" type=\"radio\" value=\"Buy\" onChange={onChange} />\r\n              <label htmlFor=\"buy-btn\" >Buy</label>\r\n              <input id=\"sell-btn\" name=\"call\" type=\"radio\" value=\"Sell\" onChange={onChange}/>\r\n              <label htmlFor=\"sell-btn\">Sell</label>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"set\">\r\n            <div className='form-txt'>Is it moving stop or closing stop?</div>\r\n            <div className='btn-pair'>\r\n              <input id=\"moving-btn\" name=\"stop\" type=\"radio\" value=\"Moving\" onChange={onChange}/>\r\n              <label htmlFor=\"moving-btn\">Moving</label>\r\n              <input id=\"closing-btn\" name=\"stop\" type=\"radio\" value=\"Closing\" onChange={onChange}/>\r\n              <label htmlFor=\"closing-btn\">Closing</label>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"set\">\r\n            <label htmlFor=\"exchange-name\" className='form-txt'>Exchange name</label>\r\n            <div>\r\n              <select name=\"exchange\" id=\"exch-name\" className=\"dropdown\" onChange={onChange}>\r\n                <option disabled selected className='display-none'>&nbsp;</option>\r\n                <option value=\"NFO\">NFO</option>\r\n                <option value=\"CDS\">CDS</option>\r\n                <option value=\"NSE\">NSE</option>\r\n                <option value=\"BSE\">BSE</option>\r\n                <option value=\"MCX\">MCX</option>\r\n                <option value=\"BCD\">BCD</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"set\">\r\n            <label htmlFor=\"instrument-type\" className='form-txt'>Instrument type</label>\r\n            <div>\r\n              <select name=\"instrument\" id=\"ins-type\" className=\"dropdown\" disabled={data.exchange===''} onChange={onChange} onClick={showIns}>\r\n                <option disabled selected className='display-none'>{insVal()}</option>\r\n                {insData.map((data)=>{\r\n                  return <option value ={data.tradingsymbol}>{data.tradingsymbol}</option>\r\n                })}\r\n              </select>\r\n            </div>\r\n          </div>\r\n          </div>\r\n\r\n          <div className=\"right-container\">\r\n            <div className=\"set\">\r\n              <label htmlFor=\"trade-price\" className='form-txt'>Trade Price</label>\r\n              <div><input className=\"right-inputs\" id=\"trade-price\" name='tradePrice' value={data.tradePrice} type=\"number\" step=\"0.1\" onChange={onChange}/></div>\r\n            </div>\r\n\r\n            <div className=\"set\">\r\n              <label htmlFor=\"stop-loss\" className='form-txt'>Stop loss</label>\r\n              <div><input className=\"right-inputs\" id=\"stop-loss\" name='stopLoss' value={data.stopLoss} type=\"number\" step=\"0.1\" onChange={onChange}/></div>\r\n            </div>\r\n\r\n            <div className=\"set\">\r\n              <label htmlFor=\"quantity\" className='form-txt'>Quantity</label>\r\n              <div><input className=\"right-inputs\" id=\"quantity\" name='qty' value={data.qty} type=\"number\" onKeyPress= {(event)=>{return event.charCode >= 48}} min=\"1\" onChange={onChange}/></div>\r\n            </div>\r\n\r\n            <div className=\"set\">\r\n              <label htmlFor=\"validity-date\" className='form-txt'>Recommendation Validity</label>\r\n              <div><DatePicker className=\"date-input\" format='dd-MMM-yyyy' name='date' minDate={new Date()} value={data.date} onChange={(value) => {setData({...data, date: value})}}/></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n          <div className=\"last-input\" style={theme}>\r\n            <div className=\"set\">\r\n              <label htmlFor=\"target-price\" className='form-txt'>Target Price: </label>\r\n              <input className=\"right-inputs\" id=\"trade-price\" name='targetPrice' value={data.targetPrice} type=\"number\" step=\"0.1\" onChange={(event) => {onChange(event)}}/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='submit'>\r\n            <input id='submit-btn' type=\"submit\" value=\"Add Recommendation\" disabled={checkSubmission()} onClick={sendData}/><span id=\"spinner\" className={spin}></span>\r\n        </div>\r\n        \r\n        </form>\r\n      </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PostReco;","import React, {useContext} from \"react\";\r\nimport \"../Reco.css\";\r\nimport { ThemeContext } from '../App';\r\n\r\nfunction Reco (props) {\r\n    const fullData = props.data;\r\n    const theme = useContext(ThemeContext);\r\n    function showDate(date, month, year) {\r\n        var dd = '', mmm, yyyy = year.toString();\r\n        if(date<10){\r\n            dd.concat('0', date.toString())\r\n        }\r\n        else{\r\n            dd=date.toString();\r\n        }\r\n        switch(month){\r\n            case 2: mmm='Jan'; break;\r\n            case 3: mmm='Feb'; break;\r\n            case 4: mmm='Mar'; break;\r\n            case 5: mmm='Apr'; break;\r\n            case 6: mmm='May'; break;\r\n            case 7: mmm='Jun'; break;\r\n            case 8: mmm='Jul'; break;\r\n            case 9: mmm='Aug'; break;\r\n            case 10: mmm='Sep'; break;\r\n            case 11: mmm='Oct'; break;\r\n            case 12: mmm='Nov'; break;\r\n            case 13: mmm='Dec'; break;\r\n            default: break;\r\n        }\r\n        var res = '';\r\n        res = res.concat(dd, '-',  mmm, '-', yyyy)\r\n        return res;\r\n    }\r\n\r\n    return(\r\n        <>\r\n            {fullData.map((data, key) => {if(key!==0){\r\n            return<div>\r\n                <div className=\"box\">\r\n                    <div className=\"head\">\r\n                        <div className=\"tag\">\r\n                            <div className=\"data-call\">{data.call}</div>\r\n                            <div className=\"data-tradePrice\">{data.tradePrice}</div>\r\n                        </div>\r\n                        <div className=\"label\">\r\n                            <h5 className=\"data-instrument\">{data.instrument}</h5>\r\n                            <div className=\"data-date\">{showDate(data.date.getDate(), data.date.getMonth(), data.date.getFullYear())}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"content\"  style={theme}>\r\n                        <div className=\"batch\">\r\n                            <div className=\"column\">\r\n                                <div className=\"entry-type\">Quantity</div>\r\n                                <div className=\"entry\">{data.qty}</div>\r\n                            </div>\r\n                            <div className=\"column\">\r\n                                <div className=\"entry-type\">Stop Loss</div>\r\n                                <div className=\"entry\">{data.stopLoss}</div>\r\n                            </div>\r\n                            <div className=\"column\">\r\n                                <div className=\"entry-type\">Stop Loss Type</div>\r\n                                <div className=\"entry\">{data.stop}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"batch\">\r\n                            <div className=\"column\">\r\n                                <div className=\"entry-type\">Exchnage Name</div>\r\n                                <div className=\"entry\">{data.exchange}</div>\r\n                            </div>\r\n                            <div className=\"column\">\r\n                                <div className=\"entry-type\">Trade Price</div>\r\n                                <div className=\"entry\">{data.tradePrice}</div>\r\n                            </div>\r\n                            <div className=\"column\">\r\n                                {/* <div className=\"entry-type\">Hello </div>\r\n                                <div className=\"entry\">Hello </div> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            }else{return<div></div>}})}\r\n        <div className = 'moreReco-btn-div'>\r\n            <button className = 'moreReco-btn' onClick={()=> {props.history.push(`/postReco`)}}>Post more recommendations</button>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Reco;","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Redirect, Route } from \"react-router-dom\";\nimport PostReco from \"./Components/PostReco\";\nimport Reco from \"./Components/Reco\";\n\nconst themes = {\n  dark: {\n      color: 'white',\n      background: 'black',\n  },\n  light: {\n      color: 'black',\n      background: 'white',\n  }\n}\nexport const ThemeContext = React.createContext(themes.dark)\n\nfunction App() {\n  const [theme, setTheme] = useState(themes.light)\n  function toggleTheme() {\n    if(theme === themes.dark){\n      setTheme(themes.light)\n    }\n    else{\n      setTheme(themes.dark)\n    }\n  }\n  function allFilled (data) {\n    for (var key in data) {\n      if (data[key] === '' || data[key] === false){\n        return false;\n      }\n    }\n    return true;\n  }\n\n  const [fullData,setFullData] = useState([{}]);\n  const callBack = (childData) => {\n    if(allFilled(childData)){\n      setFullData([...fullData, childData]);\n    }\n  }\n\n  return (\n    <>\n    <ThemeContext.Provider value = {theme}>\n      <Router path={process.env.PUBLIC_URL + '/'}>\n      <Route\n          path=\"/reco\"\n          render={(props) => ((fullData.length===1)?(\n            <Redirect \n                to={{\n                  pathname: '/postReco',\n                  message: \"show\"\n                }} \n              />\n          ):(\n              <Reco {...props} data = {fullData}/>\n          )\n          )}\n        />\n        <Route \n          path=\"/postReco\" \n          render={(props) => <PostReco {...props} callBack = {callBack}/>} />\n        <Route \n          exact path =\"/\" \n          render={()=>(\n          <Redirect to='/postReco'/> )}/>\n      </Router>\n      </ThemeContext.Provider>\n      <div className='theme-div'><button className = 'theme-btn' style={theme} onClick={toggleTheme}>Toggle Theme</button></div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}